# Aderyn Configuration File
# Help Aderyn work with more granular control

# DO NOT CHANGE version below. As of now, only 1 is supported
version = 1

# Read the description carefully and uncomment the examples in each paragraph should you consider using them.

# Base path for resolving remappings and compiling smart contracts, relative to workspace-root (directory in which the editor is open)
# Most of the time, you want to point it to the directory containing foundry.toml or hardhat.config.js/ts. 
root = "."

# Path of source directory containing the contracts, relative to root (above)
# Aderyn traverse all the nested files inside scanning for vulnerabilities
# If not specified, Aderyn will try to extract it from the framework that is being used. (Foundry / Hardhat)
# That would be "contracts/" in case of Hardhat and in case of Foundry, it depends on foundry.toml and
# many other factors like FOUNDRY_PROFILE environment variable used when starting VS Code, etc.
# Please feel free to always specify the values explicitly.
# Example:
# src = "src/"

# Path segments of contract files to include in the analysis.
# It can be a partial match like "/interfaces/", which will include all files with "/interfaces/" in the file path.
# Or it can be a full match like "src/counters/Counter.sol", which will include only the file with the exact path.
# If not specified, all contract files in the source directory will be included.
# Example:
# include = ["src/counters/Counter.sol", "src/others/"]
# include = ["/interfaces/"]

# Path segments of contract files to exclude in the analysis.
# It can be a partial match like "/interfaces/", which will exclude all files with "/interfaces/" in the file path.
# Or it can be a full match like "src/counters/Counter.sol", which will exclude only the file with the exact path.
# If not specified, no contract files will be excluded.
# Example:
# exclude = ["src/counters/Counter.sol", "src/others/"]
# exclude = ["/interfaces/"]

# Remappings used for compiling the contracts.
# If not specified, Aderyn will try to derive the values from foundry.toml (if present.) 
# That would be the result of calling `foundry remappings` 
# Example:
# remappings = ["@oz/contracts=lib/openzeppelin-contracts/contracts"]
