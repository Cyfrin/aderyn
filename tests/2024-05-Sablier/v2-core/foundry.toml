[profile.default]
  auto_detect_solc = false
  bytecode_hash = "none"
  emv_version = "paris"
  extra_output = ["storageLayout"]
  fs_permissions = [
    { access = "read", path = "./out" },
    { access = "read", path = "./out-optimized"},
    { access = "read", path = "package.json"},
    { access = "read-write", path = "./cache" },
  ]
  gas_reports = [
    "SablierV2LockupDynamic",
    "SablierV2LockupLinear",
    "SablierV2LockupTranched",
    "SablierV2NFTDescriptor",
  ]
  optimizer = true
  optimizer_runs = 1000
  out = "out"
  script = "script"
  sender = "0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38"
  solc = "0.8.23"
  src = "src"
  test = "test"

[profile.default.fuzz]
  max_test_rejects = 1_000_000 # Number of times `vm.assume` can fail
  runs = 50

[profile.default.invariant]
  call_override = false # Override unsafe external calls to perform reentrancy checks
  depth = 20            # Number of calls executed in one run
  fail_on_revert = true
  runs = 20

# Speed up compilation and tests during development
[profile.lite]
  optimizer = false

# Compile only the production code and the test mocks with via IR
[profile.optimized]
  out = "out-optimized"
  test = "test/mocks"
  via_ir = true

# See "SMTChecker and Formal Verification" in the Solidity docs
[profile.smt]
  ignored_error_codes = [
    7737, # Disable inline assembly warnings
  ]
  out = "out-optimized"
  script = "src"
  test = "src"
  via_ir = true

[profile.smt.model_checker]
  engine = "chc" # constrained Horn clauses
  invariants = ["contract", "reentrancy"]
  show_proved_safe = true
  show_unproved = true
  show_unsupported = true
  timeout = 100_000 # in milliseconds, per solving query
  targets = [
    "assert",
    "constantCondition",
    "divByZero",
    "outOfBounds",
    "overflow",
    "underflow",
  ]

[profile.smt.model_checker.contracts]
  "src/SablierV2LockupDynamic.sol" = ["SablierV2LockupDynamic"]
  "src/SablierV2LockupLinear.sol" = ["SablierV2LockupLinear"]
  "src/SablierV2LockupTranched.sol" = ["SablierV2LockupTranched"]
  "src/SablierV2NFTDescriptor.sol" = ["SablierV2NFTDescriptor"]

# Test the optimized contracts without re-compiling them
[profile.test-optimized]
  src = "test"

[doc]
  ignore = ["**/*.t.sol"]
  out = "docs"
  repository = "https://github.com/sablier-labs/v2-core"

[fmt]
  bracket_spacing = true
  int_types = "long"
  line_length = 120
  multiline_func_header = "all"
  number_underscore = "thousands"
  quote_style = "double"
  tab_width = 4
  wrap_comments = true

[rpc_endpoints]
  arbitrum = "https://arbitrum-mainnet.infura.io/v3/${API_KEY_INFURA}"
  avalanche = "https://avalanche-mainnet.infura.io/v3/${API_KEY_INFURA}"
  base = "https://mainnet.base.org"
  bnb = "https://bsc-dataseed.binance.org"
  gnosis = "https://rpc.gnosischain.com"
  localhost = "http://localhost:8545"
  ethereum = "${RPC_URL_MAINNET}"
  mainnet = "${RPC_URL_MAINNET}"
  optimism = "https://optimism-mainnet.infura.io/v3/${API_KEY_INFURA}"
  polygon = "https://polygon-mainnet.infura.io/v3/${API_KEY_INFURA}"
  sepolia = "https://sepolia.infura.io/v3/${API_KEY_INFURA}"
